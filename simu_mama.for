C++**************************************************************************
C Program SIMU_MAMA
C To generate simualtions of MAMA data
C Output: data file compatible with DECODE_MAMA, as generated by
C READ_MAMA
C Inside of a window 256x1024, object centered in (512,128).
C
C ENCODING:
C
C If 54321098 76543210
C    00xxxxxx xxxxxxxx : event (1)
C    01xxxxxx xxxxxxxx : event (2)
C    10xxxxxx xxxxxxxx : absolute time (1)
C    11xxxxxx xxxxxxxx : absolute time (2)
C Address, and relative time:
C    00yyyyxx xxxxxxxx     IYL, IXM, IYL
C    01tttttt ttttyyyy     IRTM, IRTL, IYM
C Absolute time:
C    10xxxxxx xxxxxxxx : absolute time IATL
C    11xxxxxx xxxxxxxx : absolute time IATM
C
C JLP
C Version: 06-03-90
C--**************************************************************************
	PROGRAM SIMU_MAMA
	REAL*4 XPROB,SEPAR
	REAL*8 SIGMA
C !! integer*2 !!!!
	INTEGER*2 NCARA,IBUF(8192),IRTIME
	INTEGER*4 NBUF,ITIME,ITYPE
	LOGICAL*1 IBUFT(16384)
	CHARACTER FILE1*40,FFNAME*40,COMMENTS*80,NAME*40
	EQUIVALENCE (IBUF(1),IBUFT(1))
 
10	FORMAT(A)
	CALL JLP_BEGIN
 
	OPEN(2,FILE='simu_mama.log',STATUS='NEW',ERR=999)
 
C Speckle data:
95	WRITE(6,*) ' OUTPUT FILE (SPECKLE DATA) :'
	READ(5,10) FILE1
	OPEN(10,FILE=FILE1,
     1	FORM='UNFORMATTED',STATUS='NEW',ERR=95)
 
C Header for the logfile:
	WRITE(6,92) FILE1
	WRITE(2,92) FILE1
92	FORMAT('    Program SIMU_MAMA.   Version 07-03-90',/,/,
     1	' Output file:',A,/,/,' Use a Flat Field filled with "1"',
     1	' in DECODE_MAMA afterwards',/)
 
C Input of parameters:
	WRITE(6,*) ' Number of blocks ? (100?)'
	READ(5,*) NMAXBLOCK
	WRITE(6,*) ' FWHM seeing (pixels)? (128 pixels = 2.")'
	READ(5,*) SIGMA
	SIGMA=SIGMA/2.34
	WRITE(6,*) ' Probability that a photon comes from the sky? (0.8?)'
	READ(5,*) XPROB
	WRITE(2,93) SIGMA,XPROB
93	FORMAT(' SIGMA, XPROB :',2(G12.4,2X))
	WRITE(6,*) ' Standard (1) or Double star (2) ?'
	READ(5,*) ITYPE
	SEPAR=0.
	IF(ITYPE.NE.1)THEN
	  WRITE(6,*) ' Separation (pixels)? (28 pixels = 0.45")'
	  READ(5,*) SEPAR
	ENDIF
 
C Setting some constants:
	 ITIME=1
	 IRTIME=0
	 NCARA=16384
	  NBUF=NCARA/2
 
C Initialize the random generator (non repeatable)
C	CALL G05CCF(0)
C (Use G05CBF for repeatable)
	CALL JLP_RANDOM_INIT(1) 
 
C Main loop:
	 DO K=1,NMAXBLOCK
C@	   WRITE(6,111)K
111	   FORMAT(' RECORD #',I8)
	   CALL GENE_SPECKLE(IBUF,NBUF,IRTIME,ITIME,SIGMA,XPROB,
     1	ITYPE,SEPAR)
	   WRITE(10) (IBUF(I),I=1,NBUF)
	 END DO
 
C End:
9999	  WRITE(2,111)K
	  CLOSE(2)
	  CLOSE(10)
	  PRINT *,' Logfile in: SIMU_MAMA.LOG'
	  CALL JLP_END
	  STOP
999	  PRINT *,' Fatal error opening simu_mama.log'
	  CALL JLP_END
	  STOP
	END
C********************************************************************
C Subroutine GENE_SPECKLE
C to write the output on the buffer IBUF:
C xxxxxxxx xxxxxxxx xxxxxxxx xxxxxxxx
C********************************************************************
	SUBROUTINE GENE_SPECKLE(IBUF,NBUF,IRTIME,ITIME,SIGMA,XPROB,
     1	ITYPE,SEPAR)
	INTEGER*4 NBUF,I,ITIME,ITYPE
 	INTEGER*2 IBUF(NBUF),IRTIME,IX,IY,IX1,IY1,IX2,IY2
	REAL*4 XPROB,SEPAR
	REAL*8 SIGMA
 
	IF(ITYPE.EQ.1)THEN
	  DO I=1,NBUF-1,2
	    IF(IRTIME.GE.1024)THEN
	      CALL CODE_TIME(ITIME,IBUF(I),IBUF(I+1))
	      IRTIME=IRTIME-1024
	      ITIME=ITIME+1
	   ELSE
   	      CALL RANDOM_STD(IX,IY,SIGMA,XPROB)
	      CALL CODE_XYT(IX,IY,IRTIME,IBUF(I),IBUF(I+1))
	      IRTIME=IRTIME+5
	    ENDIF
	  END DO
	ELSE
	  DO I=1,NBUF-3,4
	    IF(IRTIME.GE.1019)THEN
	      CALL CODE_TIME(ITIME,IBUF(I),IBUF(I+1))
	      IRTIME=IRTIME-1019
	      ITIME=ITIME+1
   	      CALL RANDOM_DBL(IX1,IY1,IX2,IY2,SIGMA,XPROB,SEPAR)
	      CALL CODE_XYT(IX1,IY1,IRTIME,IBUF(I+2),IBUF(I+3))
	      IRTIME=IRTIME+5
	    ELSE
   	      CALL RANDOM_DBL(IX1,IY1,IX2,IY2,SIGMA,XPROB,SEPAR)
	      CALL CODE_XYT(IX1,IY1,IRTIME,IBUF(I),IBUF(I+1))
	      IRTIME=IRTIME+5
	      CALL CODE_XYT(IX2,IY2,IRTIME,IBUF(I+2),IBUF(I+3))
	      IRTIME=IRTIME+5
	    ENDIF
	  END DO
	ENDIF
 
	RETURN
	END
C********************************************************************
C Subroutine CODE_TIME
C
C TIME is in 10.24 milliseconds units
C
C Formula used for decoding the absolute time tags:
C TIME=(FLOAT(IATL)+FLOAT(IATM)*16384.)*10.24
C********************************************************************
	SUBROUTINE CODE_TIME(ITIME,BUF1,BUF2)
	INTEGER*2 BUF1,BUF2,IATL,IATM
	INTEGER*4 ITIME
 
C Absolute time: one tag every 10.24ms
C The unit of ITIME is in 10.24 mseconds since 1024 steps can be used
C for relative time encoding:
	IATM=MIN(ITIME/16384,16383)
	IATL=MIN(ITIME-IATM,16383)
	BUF1=IBCLR(IATL,14)
	BUF1=IBSET(BUF1,15)
	BUF2=IBSET(IATM,14)
	BUF2=IBSET(BUF2,15)
 
C Absolute time:
C    10xxxxxx xxxxxxxx : absolute time IATL
C    11xxxxxx xxxxxxxx : absolute time IATM
	RETURN
	END
C********************************************************************
C Subroutine CODE_XYT
C
C IRTIME relative time 1/100msec
C
C Address, and relative time:
C    00yyyyxx xxxxxxxx     IYL, IXM, IXL
C    01tttttt ttttyyyy     IRTM, IRTL, IYM
C********************************************************************
	SUBROUTINE CODE_XYT(IX,IY,IRTIME,BUF1,BUF2)
	INTEGER*2 BUF1,BUF2,IXL,IXM,IYL,IYM,IRT,IX,IY,IRTIME
 
C IYL least signif. bits. :
	IYL=IAND(IY,15)
C IYM most signif. bits. :
	IYM=ISHFT(IY,-4)
	IYM=IAND(IYM,15)
C IX:
	IXL=IAND(IX,1023)
C BUF1:
	BUF1=IOR(IXL,ISHFT(IYL,10))
C BUF2:
	IRT=IAND(IRTIME,1023)
	IRT=ISHFT(IRT,4)
	BUF2=IOR(IOR(IRT,IYM),16384)
 
	RETURN
	END
C**************************************************************************
C Random generator of a standard star, with sky noise
C**************************************************************************
	SUBROUTINE RANDOM_STD(IX,IY,SIGMA,XPROB)
	INTEGER*2 IX,IY
	REAL*4 WORK,X1,Y1,R1,A1,XPROB
	REAL*8 SIGMA,XX
 
C We assume that the probability of getting a photon from the
C sky in the window is XPROB/(1.-XPROB) times that of getting a photon from
C the star:
C98	XX=G05CAF(0)
98	CALL JLP_RANDOM(XX)
	IF(XX.LE.XPROB)THEN
C Random generator of a noisy photon in a window 256x256:
C	  X1=256.*(G05CAF(0)-0.5)
	  CALL JLP_RANDOM(WORK)
          X1=256.*(WORK-0.5)
C	  Y1=256.*(G05CAF(0)-0.5)
	  CALL JLP_RANDOM(WORK)
          Y1=256.*(WORK-0.5)
	  IX=NINT(X1)+512
	  IY=NINT(Y1)+128
	ELSE
C Random generator of a standard star:
C@PB with double/simple precision??	  R1=G05DDF(0.,SIGMA)
C	  X1=SIGMA*G05DDF(0.,1.)
          CALL JLP_RANDOM_GAUSS(WORK)
	  X1=SIGMA*WORK
C	  Y1=SIGMA*G05DDF(0.,1.)
          CALL JLP_RANDOM_GAUSS(WORK)
	  Y1=SIGMA*WORK
C Center to (512,128):
	  IX=NINT(X1)+512
	  IY=NINT(Y1)+128
	ENDIF
 
	IX=IX-1
	IY=IY-1
 
C With random numbers, always the possibility of overflow (in Y especially)
	IF((IX.LT.0).OR.(IX.GT.1023)) GOTO 98
	IF((IY.LT.0).OR.(IY.GT.255)) GOTO 98
 
	RETURN
	END
C**************************************************************************
C Random generator of a double star, with sky noise
C**************************************************************************
	SUBROUTINE RANDOM_DBL(IX1,IY1,IX2,IY2,SIGMA,XPROB,SEPAR)
	INTEGER*2 IX1,IY1,IX2,IY2
	REAL*4 X1,Y1,X2,Y2,XPROB,SEPAR
	REAL*8 SIGMA,XX
 
	IFLAG=0
	II=NINT(SEPAR*0.707/2.)
C We assume that the probability of getting a photon from the
C sky in the window is XPROB/(1.-XPROB) times that of getting a photon from
C the star:
C98	XX=G05CAF(0)
98	CALL JLP_RANDOM(XX)
	IF(XX.LE.XPROB)THEN
C Random generator of a noisy photon in a window 256x256:
C	  X1=256.*(G05CAF(0)-0.5)
C	  Y1=256.*(G05CAF(0)-0.5)
	  CALL JLP_RANDOM(WORK)
          X1=256.*(WORK-0.5)
	  CALL JLP_RANDOM(WORK)
          Y1=256.*(WORK-0.5)
	  IX1=NINT(X1)+512
	  IY1=NINT(Y1)+128
	  CALL JLP_RANDOM(WORK)
          X1=256.*(WORK-0.5)
	  CALL JLP_RANDOM(WORK)
          Y1=256.*(WORK-0.5)
	  IX2=NINT(X1)+512
	  IY2=NINT(Y1)+128
	ELSE
C Random generator of a double star:
 
C First look for the barycenter of the double image:
          CALL JLP_RANDOM_GAUSS(WORK)
	  X1=SIGMA*WORK
          CALL JLP_RANDOM_GAUSS(WORK)
	  Y1=SIGMA*WORK
 
C Assumes a rather bad 3.6m telescope (i.e. FWHM of 0.04", sigma=0.017)
          CALL JLP_RANDOM_GAUSS(WORK)
	  X1=1.07*WORK
          CALL JLP_RANDOM_GAUSS(WORK)
	  Y1=1.07*WORK
 
C Center to (512,128)+/-(10,10) assuming 45degrees inclination
C and 0.45" separation (scale 0.016"/pixel, so 28 pixels in distance),
	  IX1=NINT(X2+X1)+512+II
	  IY1=NINT(Y2+Y1)+128+II
 
          CALL JLP_RANDOM_GAUSS(WORK)
	  X2=1.07*WORK
          CALL JLP_RANDOM_GAUSS(WORK)
	  Y2=1.07*WORK
	  IX2=NINT(X2+X1)+512-II
	  IY2=NINT(Y2+Y1)+128-II
	ENDIF
 
C Between [0,255] and [0,1023]:
	IX1=IX1-1
	IY1=IY1-1
	IX2=IX2-1
	IY2=IY2-1
 
C With random numbers, always the possibility of overflow (in Y especially)
	IF((IX1.LT.0).OR.(IX1.GT.1023).OR.
     1	(IY1.LT.0).OR.(IY1.GT.255).OR.
     1	(IX2.LT.0).OR.(IX2.GT.1023).OR.
     1	(IY2.LT.0).OR.(IY2.GT.255))THEN
	  IFLAG=IFLAG+1
	  IF(IFLAG.LT.10)THEN
	     GOTO 98
	  ELSE
	     WRITE(6,*) ' FATAL ERROR: always outside the window'
	     WRITE(2,*) ' FATAL ERROR: always outside the window'
	     STOP
	  ENDIF
	ENDIF
 
	RETURN
	END
C*********************************************************************
	INCLUDE 'jlp_bispec1.for'
	INCLUDE 'jlp_cover.for'
